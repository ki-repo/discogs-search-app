{"version":3,"sources":["shared/components/CardsWrapper.css.ts","shared/components/Card/CardContentWrapper.css.ts","shared/components/Card/CardItem.css.ts","shared/components/Card/CardItemWrapper.css.ts","shared/components/Card/CardSubTitle.css.ts","shared/components/Card/CardTitle.css.ts","shared/components/Card/CardImageCover.css.ts","shared/features/ReleaseCard/ReleaseCard.tsx","utils/apiClient.ts","apiCalls/release.ts","containers/PopularReleases/PopularReleases.dataQuery.ts","shared/components/Pagination/Pagination.css.ts","shared/components/Pagination/Pagination.tsx","shared/components/InputForm/InputForm.css.ts","shared/components/SearchInput/SearchInput.tsx","containers/PopularReleases/PopularReleases.tsx"],"names":["CardsWrapper","styled","ul","CardContentWrapper","div","CardItem","CardItemWrapper","li","CardSubTitle","p","inputColor","CardTitle","h2","CardImageCover","img","ReleaseCard","id","coverImg","country","year","title","src","alt","loading","client","endpoint","a","body","customConfig","headers","config","method","JSON","stringify","window","fetch","response","json","data","ok","Error","statusText","Promise","reject","message","get","post","getReleasesByArtist","payload","requestUrl","paginatedRequest","artistName","Authorization","process","paginationResults","pageId","pagination","page","totalItems","items","totalPages","pages","next","urls","previous","prev","first","last","results","paginationInfo","releases","map","item","cover_image","dataQuery","name","fn","options","staleTime","refetchOnWindowFocus","refetchOnMount","PaginationWrapper","PaginationControl","isDisabled","Pagination","PaginationCallBack","onClick","FormDivContainer","FormRow","FormLabelContainer","FormInputContainer","FormSubmitButton","button","FormLabel","label","FormTextInput","input","SearchInput","onChange","filterKey","placeHolder","useState","inputValue","setInputValue","onSubmit","ev","preventDefault","htmlFor","target","select","type","value","required","placeholder","PopularReleases","setArtistName","filterValue","setFilterValue","paginatedPageId","setPaginatedPageID","useQuery","isLoading","isError","handleArtistFilterChange","useCallback","undefined","handlePaginationChange","paginationFilter","newPageId","trim","length","release"],"mappings":"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","file":"static/js/4.e31812ed.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\n/** CardsWrapper component used as a wrapper for Cards */\r\nexport const CardsWrapper = styled.ul`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n/** CardContentWrapper component used as a wrapper for Card Content */\r\nexport const CardContentWrapper = styled.div`\r\n  padding: 1rem;\r\n  height: 100%;\r\n  height:fit-content;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n/** CardItem component used as a wrapper for single card */\r\nexport const CardItem = styled.div`\r\n  border-radius: 0.25rem;\r\n  box-shadow: 0 20px 40px -14px #1e1e1e;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow: hidden;\r\n  background-color: #c53e55;\r\n  &:hover {\r\n    -webkit-transform: scale(1.05);\r\n    -ms-transform: scale(1.05);\r\n    transform: scale(1.05);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\n/** CardItemWrapper component used as a wrapper for single card */\r\nexport const CardItemWrapper = styled.li`\r\n  display: grid;\r\n  padding: 1rem;\r\n  width: 100%;\r\n  @media (min-width: 40rem) {\r\n    width: 50%;\r\n  }\r\n  @media (min-width: 56rem) {\r\n    width: 25%;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\n/** CardSubtitle component used as a wrapper for Card Subtitle */\r\n\r\ninterface CardBodyTextProps {\r\n  inputColor?: string;\r\n}\r\nexport const CardSubTitle = styled.p<CardBodyTextProps>`\r\n  color: ${({ inputColor }) => inputColor || '#dadada'};\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  margin-bottom: 1.25rem;\r\n  font-weight: 400;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\n/** CardTitle component used as a wrapper for Card Title */\r\n\r\ninterface CardBodyTextProps {\r\n    inputColor?: string;\r\n  }\r\n\r\nexport const CardTitle = styled.h2<CardBodyTextProps>`\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  text-transform: capitalize;\r\n  margin: 0px;\r\n  color: ${({ inputColor }) => inputColor || '#dadada'};\r\n`;\r\n","import styled from 'styled-components';\r\n\r\n/** CardImageCover component used as a wrapper for Card Image */\r\n\r\nexport const CardImageCover = styled.img`\r\n  margin: 0px;\r\n  width: 100%;\r\n  height: 15rem;\r\n  object-fit: fill;\r\n`;\r\n","import React, { ReactElement } from 'react';\r\nimport { ReleaseInfo } from 'src/apiCalls/release';\r\nimport { CardContentWrapper } from 'src/shared/components/Card/CardContentWrapper.css';\r\nimport { CardItem } from 'src/shared/components/Card/CardItem.css';\r\nimport { CardItemWrapper } from 'src/shared/components/Card/CardItemWrapper.css';\r\nimport { CardSubTitle } from 'src/shared/components/Card/CardSubTitle.css';\r\nimport { CardTitle } from 'src/shared/components/Card/CardTitle.css';\r\nimport { CardImageCover } from 'src/shared/components/Card/CardImageCover.css';\r\n\r\n/**\r\n * This component is used as a Release Card component, to show Release details\r\n */\r\nconst ReleaseCard = ({\r\n  id,\r\n  coverImg,\r\n  country,\r\n  year,\r\n  title,\r\n}: ReleaseInfo): ReactElement => {\r\n  return (\r\n    <CardItemWrapper key={id}>\r\n      <CardItem>\r\n        <CardContentWrapper>\r\n          <CardImageCover\r\n            src={coverImg}\r\n            alt={title}\r\n            loading=\"lazy\"\r\n          ></CardImageCover>\r\n          <CardTitle>{title}</CardTitle>\r\n          <CardSubTitle>\r\n            {country} - {year}\r\n          </CardSubTitle>\r\n        </CardContentWrapper>\r\n      </CardItem>\r\n    </CardItemWrapper>\r\n  );\r\n};\r\n\r\nexport default ReleaseCard;\r\n","/* eslint-disable */\r\n// A tiny wrapper around fetch(), borrowed from\r\n// https://kentcdodds.com/blog/replace-axios-with-a-simple-custom-fetch-wrapper\r\nexport async function client(endpoint: string, { body, ...customConfig } = {} as any) {\r\n  const headers = { 'Content-Type': 'application/json' };\r\n\r\n  const config = {\r\n    method: body ? 'POST' : 'GET',\r\n    ...customConfig,\r\n    headers: {\r\n      ...headers,\r\n      ...customConfig.headers,\r\n    },\r\n  };\r\n\r\n  if (body) {\r\n    config.body = JSON.stringify(body);\r\n  }\r\n\r\n  let data;\r\n  try {\r\n    const response = await window.fetch(endpoint, config);\r\n    data = await response.json();\r\n    if (response.ok) {\r\n      return data;\r\n    }\r\n    throw new Error(response.statusText);\r\n  } catch (err) {\r\n    return Promise.reject(err.message ? err.message : data);\r\n  }\r\n}\r\n\r\nclient.get = function (endpoint: any, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, method: 'GET' });\r\n};\r\n\r\nclient.post = function (endpoint: any, body: any, customConfig = {}) {\r\n  return client(endpoint, { ...customConfig, body, method: 'POST' });\r\n};\r\n\r\n","import { env } from 'process';\r\nimport { client } from 'src/utils/apiClient';\r\n\r\nexport interface PaginationResponse {\r\n  pageId: number;\r\n  totalPages: number;\r\n  totalItems: number;\r\n  first?: string;\r\n  last?: string;\r\n  previous?: string;\r\n  next?: string;\r\n}\r\n\r\nexport interface ReleaseInfo {\r\n  id: number;\r\n  coverImg: string;\r\n  title: string;\r\n  year: string;\r\n  country: string;\r\n}\r\n\r\nexport interface SearchResponse {\r\n  paginationInfo: PaginationResponse;\r\n  releases: ReleaseInfo[];\r\n}\r\n\r\nexport const PAGINATION_SIZE = 50;\r\nconst DEFAULT_PAGE_INDEX = 1;\r\n\r\nexport interface ReleasesByArtistRequest {\r\n  artistName: string;\r\n  paginatedRequest?: string;\r\n}\r\n\r\n\r\n// a function to make an api call and format reponse\r\nexport const getReleasesByArtist = async (\r\n  payload: ReleasesByArtistRequest\r\n): Promise<SearchResponse> => {\r\n  const requestUrl = payload.paginatedRequest\r\n    ? payload.paginatedRequest\r\n    : `https://api.discogs.com/database/search?type=release&artist=${payload.artistName}&page=${DEFAULT_PAGE_INDEX}&per_page=${PAGINATION_SIZE}`;\r\n  const data = await client(requestUrl, {\r\n    headers: {\r\n      Authorization: `Discogs key=${process.env.REACT_APP_DISCOGS_CONSUMER_KEY}, secret=${process.env.REACT_APP_DISCOGS_SECRET_KEY}`,\r\n    },\r\n  });\r\n  const paginationResults: PaginationResponse = {\r\n    pageId: data.pagination.page,\r\n    totalItems: data.pagination.items,\r\n    totalPages: data.pagination.pages,\r\n    next: data.pagination.urls?.next,\r\n    previous: data.pagination.urls?.prev,\r\n    first: data.pagination.urls?.first,\r\n    last: data.pagination.urls?.last,\r\n  };\r\n  const results: SearchResponse = {\r\n    paginationInfo: paginationResults,\r\n    releases: [],\r\n  };\r\n\r\n  results.releases = data.results.map((item: any) => {\r\n    return {\r\n      id: item.id,\r\n      coverImg: item.cover_image,\r\n      title: item.title,\r\n      year: item.year,\r\n      country: item.country,\r\n    };\r\n  });\r\n\r\n  return results;\r\n};\r\n","import {\r\n  getReleasesByArtist,\r\n  ReleasesByArtistRequest,\r\n  SearchResponse,\r\n} from 'src/apiCalls/release';\r\n\r\nconst QUERY_NAME = 'discogs';\r\n\r\nconst DataQueryFn = (payload: ReleasesByArtistRequest): Promise<SearchResponse> => {\r\n  return getReleasesByArtist(payload);\r\n};\r\n\r\nconst DataQueryOptions = {\r\n  staleTime: 5000,\r\n  refetchOnWindowFocus: false,\r\n  refetchOnMount: false,\r\n};\r\n\r\nconst dataQuery = {\r\n  name: QUERY_NAME,\r\n  fn: DataQueryFn,\r\n  options: DataQueryOptions,\r\n};\r\n\r\nexport default dataQuery;\r\n","import styled from 'styled-components';\r\n\r\ninterface PaginationControlProps {\r\n  isDisabled?: boolean;\r\n}\r\n/** Pagination component*/\r\nexport const PaginationWrapper = styled.div`\r\n  margin: 2rem;\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 0.4rem;\r\n  @media (max-width: 40rem) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const PaginationControl = styled.div<PaginationControlProps>`\r\n  flex: 1 1 auto;\r\n  border: 1px solid;\r\n  text-align: center;\r\n  margin: 0.4rem;\r\n  align-self: center;\r\n  color: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  border-color: ${({ isDisabled }) => (isDisabled ? 'gray' : 'red')};\r\n  color: ${({ isDisabled }) => (isDisabled ? 'gray' : 'black')};\r\n  &:hover {\r\n    cursor: ${({ isDisabled }) => (isDisabled ? 'not-allowed' : 'pointer')};\r\n  }\r\n  @media (max-width: 40rem) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\nimport { PaginationResponse, PAGINATION_SIZE } from '../../../apiCalls/release';\r\nimport { PaginationControl, PaginationWrapper } from './Pagination.css';\r\n/**\r\n * This component is used as a Pagination component\r\n */\r\n\r\nexport interface PaginationProps {\r\n  PaginationCallBack: Function;\r\n  paginationInfo: PaginationResponse;\r\n}\r\nconst Pagination = ({\r\n  PaginationCallBack,\r\n  paginationInfo,\r\n}: PaginationProps): ReactElement => {\r\n  if (paginationInfo.totalItems <= PAGINATION_SIZE) {\r\n    return <></>;\r\n  }\r\n  return (\r\n    <PaginationWrapper>\r\n      <PaginationControl\r\n        isDisabled={!paginationInfo.first}\r\n        onClick={() => {\r\n          paginationInfo.first && PaginationCallBack(paginationInfo.first, 1);\r\n        }}\r\n      >\r\n        {'<<'} first\r\n      </PaginationControl>\r\n      <PaginationControl\r\n        isDisabled={!paginationInfo.previous}\r\n        onClick={() => {\r\n          paginationInfo.previous &&\r\n            PaginationCallBack(\r\n              paginationInfo.previous,\r\n              paginationInfo.pageId - 1\r\n            );\r\n        }}\r\n      >\r\n        {'<'}previous\r\n      </PaginationControl>\r\n\r\n      <PaginationControl isDisabled={false}>\r\n        Page {paginationInfo.pageId} of {paginationInfo.totalPages}\r\n      </PaginationControl>\r\n      <PaginationControl\r\n        isDisabled={!paginationInfo.next}\r\n        onClick={() => {\r\n          paginationInfo.next &&\r\n            PaginationCallBack(paginationInfo.next, paginationInfo.pageId + 1);\r\n        }}\r\n      >\r\n        next {'>'}\r\n      </PaginationControl>\r\n      <PaginationControl\r\n        isDisabled={!paginationInfo.last}\r\n        onClick={() => {\r\n          paginationInfo.last &&\r\n            PaginationCallBack(paginationInfo.last, paginationInfo.totalPages);\r\n        }}\r\n      >\r\n        last {'>>'}\r\n      </PaginationControl>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import styled from 'styled-components';\r\n\r\n/** Input Form component*/\r\nexport const FormDivContainer = styled.div`\r\n  border-radius: 5px;\r\n  background-color: #c53e55;\r\n  padding: 20px;\r\n`;\r\n\r\nexport const FormRow = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  @media (max-width: 40rem) {\r\n    flex-direction: column;\r\n  }\r\n  &:after {\r\n    content: '';\r\n    display: table;\r\n    clear: both;\r\n  }\r\n`;\r\n\r\nexport const FormLabelContainer = styled.div`\r\n  margin-top: 6px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const FormInputContainer = styled.div`\r\n  flex: auto;\r\n  width: 50%;\r\n  margin-top: 6px;\r\n  @media (max-width: 600px) {\r\n    width: 100%;\r\n    margin-top: 0;\r\n  }\r\n`;\r\n\r\nexport const FormSubmitButton = styled.button`\r\n  background-color: white;\r\n  color: #c53e55;\r\n  flex: auto;\r\n  border: none;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  &.hover {\r\n    background-color: #c53e55;\r\n  }\r\n  margin-top: 0.4rem;\r\n  margin-left: 1rem;\r\n  height: 2.5rem;\r\n  @media (max-width: 40rem) {\r\n    width: 100%;\r\n    margin: 0.5rem 0px;\r\n  }\r\n`;\r\n\r\nexport const FormLabel = styled.label`\r\n  padding: 12px 12px 12px 0;\r\n  display: inline-block;\r\n  color: #dadada;\r\n`;\r\n\r\nexport const FormTextInput = styled.input`\r\n  width: 100%;\r\n  padding: 12px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 4px;\r\n  resize: vertical;\r\n`;\r\n","import React, { ReactElement, useCallback, useState } from 'react';\r\nimport {\r\n  FormDivContainer,\r\n  FormInputContainer,\r\n  FormLabel,\r\n  FormLabelContainer,\r\n  FormRow,\r\n  FormSubmitButton,\r\n  FormTextInput,\r\n} from '../InputForm/InputForm.css';\r\ninterface SelectInputProps {\r\n  label: string;\r\n  filterKey: string;\r\n  placeHolder: string;\r\n  onChange: Function;\r\n}\r\n\r\n/**\r\n * This component is used as a select component\r\n * it can be imporved as now the options are used for both labels and values\r\n */\r\nconst SearchInput = ({\r\n  label,\r\n  onChange,\r\n  filterKey,\r\n  placeHolder,\r\n}: SelectInputProps): ReactElement => {\r\n  const [inputValue, setInputValue] = useState(placeHolder);\r\n\r\n  //   // handle selection change callback by propagating the event and setting the new selection value\r\n  const handleChange = (ev: any) => {\r\n    setInputValue(ev.target.value);\r\n  };\r\n\r\n  const handleSubmit = (ev: any) => {\r\n    ev.preventDefault();\r\n    onChange(inputValue);\r\n  };\r\n\r\n  const handleClick = (ev: any) => {\r\n    ev.target.select();\r\n  };\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <FormDivContainer>\r\n        <FormRow>\r\n          <FormLabelContainer>\r\n            <FormLabel htmlFor={filterKey}>{label}</FormLabel>\r\n          </FormLabelContainer>\r\n          <FormInputContainer>\r\n            <FormTextInput\r\n              onClick={handleClick}\r\n              type=\"text\"\r\n              value={inputValue}\r\n              onChange={handleChange}\r\n              required\r\n              name={filterKey}\r\n              placeholder={placeHolder}\r\n            ></FormTextInput>\r\n          </FormInputContainer>\r\n          <FormSubmitButton type=\"submit\">Filter</FormSubmitButton>\r\n        </FormRow>\r\n      </FormDivContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchInput;\r\n","import React, { Fragment, ReactElement, useCallback, useState } from 'react';\r\nimport { CardsWrapper } from 'src/shared/components/CardsWrapper.css';\r\nimport ReleaseCard from 'src/shared/features/ReleaseCard/ReleaseCard';\r\nimport { useQuery } from 'react-query';\r\nimport dataQuery from './PopularReleases.dataQuery';\r\nimport { ReleaseInfo } from 'src/apiCalls/release';\r\nimport Pagination from 'src/shared/components/Pagination/Pagination';\r\nimport SearchInput from 'src/shared/components/SearchInput/SearchInput';\r\n/**\r\n * This component is used for Showing popular Releases\r\n */\r\nconst PopularReleases = (): ReactElement => {\r\n  const [artistName, setArtistName] = useState('');\r\n  const [filterValue, setFilterValue] = useState<string>();\r\n  const [paginatedPageId, setPaginatedPageID] = useState<number>(1);\r\n  const { isLoading, isError, data } = useQuery(\r\n    [\r\n      `${dataQuery.name}-${artistName}-${paginatedPageId}`,\r\n      {\r\n        artistName: artistName,\r\n        paginatedRequest: filterValue,\r\n      },\r\n    ],\r\n    () =>\r\n      dataQuery.fn({\r\n        artistName: artistName,\r\n        paginatedRequest: filterValue,\r\n      }),\r\n    {\r\n      ...dataQuery.options,\r\n    }\r\n  );\r\n\r\n  const handleArtistFilterChange = useCallback(\r\n    (artistName: string) => {\r\n      setFilterValue(undefined);\r\n      setArtistName(artistName);\r\n    },\r\n    [setArtistName]\r\n  );\r\n\r\n  const handlePaginationChange = useCallback(\r\n    (paginationFilter: string, newPageId: number) => {\r\n      setFilterValue(paginationFilter);\r\n      setPaginatedPageID(newPageId);\r\n    },\r\n    [setFilterValue, setPaginatedPageID]\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Music Releases</h1>\r\n\r\n      <SearchInput\r\n        filterKey=\"artist\"\r\n        label=\"Filter Artist\"\r\n        placeHolder={\r\n          artistName.trim().length === 0 ? 'Random Artists...' : artistName\r\n        }\r\n        onChange={handleArtistFilterChange}\r\n      ></SearchInput>\r\n      {!data && isLoading ? <div>Loading</div> : null}\r\n      {!data && isError ? <div>error</div> : null}\r\n      {data && data.paginationInfo.totalItems === 0 ? (\r\n        <h1>No Releases Found for this artist</h1>\r\n      ) : null}\r\n      {data?.paginationInfo ? (\r\n        <Pagination\r\n          paginationInfo={data?.paginationInfo}\r\n          PaginationCallBack={handlePaginationChange}\r\n        ></Pagination>\r\n      ) : null}\r\n      <CardsWrapper>\r\n        {data?.releases.map((release: ReleaseInfo) => (\r\n          <ReleaseCard\r\n            key={release.id}\r\n            country={release.country}\r\n            coverImg={release.coverImg}\r\n            id={release.id}\r\n            title={release.title}\r\n            year={release.year}\r\n          />\r\n        ))}\r\n      </CardsWrapper>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PopularReleases;\r\n"],"sourceRoot":""}